// Code generated by goctl. DO NOT EDIT.
// Source: item.proto

package itemclient

import (
	"context"

	"go-zero-demo/server/rpc/item/pb/item"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateUploadTaskReq  = item.CreateUploadTaskReq
	CreateUploadTaskResp = item.CreateUploadTaskResp
	GetVideoByIdReq      = item.GetVideoByIdReq
	GetVideoByIdResp     = item.GetVideoByIdResp

	Item interface {
		CreateUploadTask(ctx context.Context, in *CreateUploadTaskReq, opts ...grpc.CallOption) (*CreateUploadTaskResp, error)
		GetVideoById(ctx context.Context, in *GetVideoByIdReq, opts ...grpc.CallOption) (*GetVideoByIdResp, error)
	}

	defaultItem struct {
		cli zrpc.Client
	}
)

func NewItem(cli zrpc.Client) Item {
	return &defaultItem{
		cli: cli,
	}
}

func (m *defaultItem) CreateUploadTask(ctx context.Context, in *CreateUploadTaskReq, opts ...grpc.CallOption) (*CreateUploadTaskResp, error) {
	client := item.NewItemClient(m.cli.Conn())
	return client.CreateUploadTask(ctx, in, opts...)
}

func (m *defaultItem) GetVideoById(ctx context.Context, in *GetVideoByIdReq, opts ...grpc.CallOption) (*GetVideoByIdResp, error) {
	client := item.NewItemClient(m.cli.Conn())
	return client.GetVideoById(ctx, in, opts...)
}
