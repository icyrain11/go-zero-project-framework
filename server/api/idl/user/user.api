syntax = "v1"

type (
    // 定义登录接口的请求体
    LoginReq {
        Username string `json:"username"`
        Password string `json:"password"`
    }
        // 定义登录接口的响应体
    LoginResp {
        Id int64 `json:"id"`
        Username string `json:"username"`
        Token string `json:"token"`
    }
)

type (
    //通过id获取用户
    GetUserByIdReq {
        Id int64 `path:"id"`
    }

    GetCurrentUserReq {
        Id int64 `path:"id"`
    }

    GetCurrentUserResp {
        Id int64 `json:"id"`
        Username string `json:"username"`
        Nickname string `json:"nickname"`
        Gender string `json:"gender"`
        Mobile string `json:"mobile"`
    }
        // 定义登录接口的响应体
    GetUserByIdResp {
        Id int64 `json:"id"`
        Username string `json:"username"`
        Nickname string `json:"nickname"`
        Gender string `json:"gender"`
        Mobile string `json:"mobile"`
    }
)


@server(
    group : user
    prefix : api/user
)

service api {
    //用户登录
    @handler Login
    post /login (LoginReq) returns (LoginResp)

    //获取用户信息
    @handler GetUserById
    get /:id (GetUserByIdReq) returns (GetUserByIdResp)
}

@server(
    middleware : LoginStatus,Authorize
    group : user
    prefix : api/user
)

service api {
    //获取当前登录用户
    @handler GetCurrentUser
    get /current returns (GetCurrentUserResp)
    //退出登录
    @handler Logout
    post /logout
}